/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplace,
  NftMarketplaceInterface,
} from "../../contracts/NftMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__AlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NftNotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedForMarketplace",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__OwnerCannotBuyHisOwnNft",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemBough",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "ListingDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplace.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555061241e806100286000396000f3fe6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190612052565b61019d565b6040516100a99190612098565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906120df565b610222565b6040516100e6919061216c565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190612187565b610329565b005b34801561012457600080fd5b5061012d610aa1565b005b610149600480360381019061014491906120df565b610d4b565b005b34801561015757600080fd5b50610172600480360381019061016d91906120df565b6115ba565b005b34801561018057600080fd5b5061019b60048036038101906101969190612187565b611aca565b005b60006101b3671eddcdcbff3adc8a60c01b611fbc565b6101c7678cfc7b1b6272710160c01b611fbc565b6101db675105f96bc0bac0bc60c01b611fbc565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61022a611fbf565b61023e6711d642809d5f3d8160c01b611fbc565b61025267c805264f2b5ff38a60c01b611fbc565b61026667fe1d111e67d5935060c01b611fbc565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b61033d6739eb76bfd1cd79de60c01b611fbc565b828261035367c2dd073b671de05f60c01b611fbc565b61036767b21ccdf09ca8367860c01b611fbc565b61037b67cab87d06f67aa57960c01b611fbc565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905061044e672ea297b0cdb48ac160c01b611fbc565b61046267c38511a11accbb5f60c01b611fbc565b6000816000015111156104d657610483674cefb7e46d0e91a460c01b611fbc565b610497676ef558526b31b17360c01b611fbc565b82826040517fc2f0d7090000000000000000000000000000000000000000000000000000000081526004016104cd9291906121e9565b60405180910390fd5b6104ea673f7570b001a0cdcf60c01b611fbc565b6104fe676a06f202b2ffb91260c01b611fbc565b610512674f49ac6eda97586560c01b611fbc565b61052667ea80f426825938bb60c01b611fbc565b85853361053d6731818c17fada6f2460c01b611fbc565b61055167d0f6ba574919537a60c01b611fbc565b61056567598efbe7ca11fc7760c01b611fbc565b600083905061057e6799b78babe48a7b9b60c01b611fbc565b61059267de69195092fdae8e60c01b611fbc565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016105cd9190612098565b602060405180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190612227565b905061062467544e3d0c96d0250a60c01b611fbc565b610638676bd10987480341a160c01b611fbc565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106c55761067f6715d26385ba8b63c760c01b611fbc565b61069367bfca234252877d7260c01b611fbc565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d967bdec14ee0a9f99c060c01b611fbc565b6106ed67da38d3f7bf71417960c01b611fbc565b61070167c7ecbca36316164c60c01b611fbc565b61071567bec06c95bf77685060c01b611fbc565b6107296745cb04eb0f38cb1660c01b611fbc565b61073d673cd03403a556482060c01b611fbc565b6000891161079f5761075967af3eb1fabb22c02060c01b611fbc565b61076d67f046c60c5b9bf71960c01b611fbc565b6040517f096d7ecf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107b367f4f18cd3a826342460c01b611fbc565b6107c76776df54685154d97360c01b611fbc565b6107db67befe7a74f288b91d60c01b611fbc565b60008b90506107f46797174a3906efb19360c01b611fbc565b61080867344f09af9b26206460c01b611fbc565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8d6040518263ffffffff1660e01b81526004016108589190612098565b602060405180830381865afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190612227565b73ffffffffffffffffffffffffffffffffffffffff161461090e576108c867e8971778fd31dba460c01b611fbc565b6108dc6766ce4759fb590bc460c01b611fbc565b6040517f13e7d28d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092267902cbde2dadeaba960c01b611fbc565b610936677ab867a8002b029b60c01b611fbc565b60405180604001604052808b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610a19678f095498ed06c4bc60c01b611fbc565b610a2d6755302d8f8e5b248660c01b611fbc565b8a8c73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4356b9bb6d0b8c76c91c514b9dd79473640a142aaa02c6b4909963ccedef603c8d604051610a8b9190612098565b60405180910390a4505050505050505050505050565b610ab56728ff71b6d3bf564060c01b611fbc565b610ac9674a75a297a7e5f16b60c01b611fbc565b610add67e8dcfb712545d81f60c01b611fbc565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610b35673599ad0d8c09ab8460c01b611fbc565b610b4967c663cc84ee7a085e60c01b611fbc565b60008111610bab57610b6567c46b3d62d7a8919e60c01b611fbc565b610b7967d5ae9a48b1fb2bba60c01b611fbc565b6040517f668a7c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbf67ecbc830e75f4d4b460c01b611fbc565b610bd3679093162481b1de7e60c01b611fbc565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c2c67d05d69e15756975560c01b611fbc565b610c4067889e95a13d3ff14360c01b611fbc565b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610c6690612285565b60006040518083038185875af1925050503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b50509050610cc0674bfe771382c752a660c01b611fbc565b610cd467c0f929faca6b18b860c01b611fbc565b80610d3357610ced67c025ffe89eea91e360c01b611fbc565b610d0167d8bb888d2a31698660c01b611fbc565b6040517fa05884ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4767cfdca158ef62d3b260c01b611fbc565b5050565b610d5f67faf9f037e99c644760c01b611fbc565b600260005403610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b906122f7565b60405180910390fd5b6002600081905550610dc0679b9946dc4915401860c01b611fbc565b610dd4672a4cbdf54a2b340a60c01b611fbc565b8181610dea6743d69484b17df7c960c01b611fbc565b610dfe67276e768eba14e28e60c01b611fbc565b610e1267239699c27199516860c01b611fbc565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610ee56702a6b79d0d1ee06e60c01b611fbc565b610ef96779f0a2c18706727960c01b611fbc565b6000816000015111610f6c57610f1967d99d42c59f38821060c01b611fbc565b610f2d67670a8ff01fa23c2860c01b611fbc565b82826040517f8790e63a000000000000000000000000000000000000000000000000000000008152600401610f639291906121e9565b60405180910390fd5b610f8067fbc76f60f5aadd8260c01b611fbc565b610f946754b4c6bfc707577560c01b611fbc565b610fa8672184ab70ceeb3ff160c01b611fbc565b610fbc674cbcc17a9b3dc72260c01b611fbc565b848433610fd367a5b190b466b0e11e60c01b611fbc565b610fe767318977c6f1513cb560c01b611fbc565b610ffb67c81c021113040a0c60c01b611fbc565b600083905061101467b0e10a2e7aec69c060c01b611fbc565b61102867c7e49fbef879482360c01b611fbc565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016110639190612098565b602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190612227565b90506110ba67ad48058db1cf68fb60c01b611fbc565b6110ce675cfb0b6ff679537b60c01b611fbc565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461115b576111156703959ce5c6da3cc760c01b611fbc565b61112967ef17156674fce6be60c01b611fbc565b6040517f3bcf9f2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116f67143a44bf20e540d560c01b611fbc565b611183676f29758eed05d1a260c01b611fbc565b6111976741f7bc6e6785a3a160c01b611fbc565b6111ab676e6b1a5ca32ae9ee60c01b611fbc565b6111bf670b369c6709566d7e60c01b611fbc565b6111d3678df84c50837f4dd560c01b611fbc565b6000600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506112a667eb79017e030bd19160c01b611fbc565b6112ba6742d64fdf23fc53d860c01b611fbc565b80600001513411611332576112d9676da8f69da4a1477660c01b611fbc565b6112ed67686f1beaebe138c960c01b611fbc565b8a8a82600001516040517f817ce9f100000000000000000000000000000000000000000000000000000000815260040161132993929190612317565b60405180910390fd5b6113466752d0d3bf4b09a46260c01b611fbc565b61135a67eccac909ce21a57160c01b611fbc565b3460026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ad919061237d565b925050819055506113c867d62f50c58dbab8e060c01b611fbc565b600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505061145e6735150dbcd6e7582b60c01b611fbc565b611472671e7da7881b5cc74360c01b611fbc565b60008b905061148b676a7997759e57291560c01b611fbc565b61149f67dfdfffd1ea19424f60c01b611fbc565b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338e6040518463ffffffff1660e01b81526004016114e0939291906123b1565b600060405180830381600087803b1580156114fa57600080fd5b505af115801561150e573d6000803e3d6000fd5b5050505061152667ed1a79ceac25320660c01b611fbc565b61153a67f6c9324a0358918060c01b611fbc565b8a8c73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fea2209283edb136d338541fa15a2c90e6790f34abe1976ec39603aafdd61bd30856000015160405161159c9190612098565b60405180910390a45050505050505050505060016000819055505050565b6115ce67f1b30bc57c2e281d60c01b611fbc565b81816115e46743d69484b17df7c960c01b611fbc565b6115f867276e768eba14e28e60c01b611fbc565b61160c67239699c27199516860c01b611fbc565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506116df6702a6b79d0d1ee06e60c01b611fbc565b6116f36779f0a2c18706727960c01b611fbc565b60008160000151116117665761171367d99d42c59f38821060c01b611fbc565b61172767670a8ff01fa23c2860c01b611fbc565b82826040517f8790e63a00000000000000000000000000000000000000000000000000000000815260040161175d9291906121e9565b60405180910390fd5b61177a67fbc76f60f5aadd8260c01b611fbc565b61178e6754b4c6bfc707577560c01b611fbc565b6117a26730558f002339426360c01b611fbc565b6117b667e454c9b03c3ef01a60c01b611fbc565b8484336117cd6731818c17fada6f2460c01b611fbc565b6117e167d0f6ba574919537a60c01b611fbc565b6117f567598efbe7ca11fc7760c01b611fbc565b600083905061180e6799b78babe48a7b9b60c01b611fbc565b61182267de69195092fdae8e60c01b611fbc565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161185d9190612098565b602060405180830381865afa15801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e9190612227565b90506118b467544e3d0c96d0250a60c01b611fbc565b6118c8676bd10987480341a160c01b611fbc565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146119555761190f6715d26385ba8b63c760c01b611fbc565b61192367bfca234252877d7260c01b611fbc565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61196967bdec14ee0a9f99c060c01b611fbc565b61197d67da38d3f7bf71417960c01b611fbc565b61199167032641153a104dcd60c01b611fbc565b6119a567f3593764d296dabd60c01b611fbc565b6119b967cfc930c2c189cb5860c01b611fbc565b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050611a4f67ca0f75c3c4b9366d60c01b611fbc565b611a63672ee7a3c3cdf99f5f60c01b611fbc565b888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdc1c98b735a2a3a63ffab19b8035d3c0e01c1dded5676b3ee21f08b6d2efca4760405160405180910390a450505050505050505050565b611ade675bf1bb2491c8083f60c01b611fbc565b828233611af56731818c17fada6f2460c01b611fbc565b611b0967d0f6ba574919537a60c01b611fbc565b611b1d67598efbe7ca11fc7760c01b611fbc565b6000839050611b366799b78babe48a7b9b60c01b611fbc565b611b4a67de69195092fdae8e60c01b611fbc565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611b859190612098565b602060405180830381865afa158015611ba2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc69190612227565b9050611bdc67544e3d0c96d0250a60c01b611fbc565b611bf0676bd10987480341a160c01b611fbc565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c7d57611c376715d26385ba8b63c760c01b611fbc565b611c4b67bfca234252877d7260c01b611fbc565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c9167bdec14ee0a9f99c060c01b611fbc565b611ca567da38d3f7bf71417960c01b611fbc565b611cb9678288ad65805a6dde60c01b611fbc565b611ccd67bbf115ec1860616260c01b611fbc565b8787611ce36743d69484b17df7c960c01b611fbc565b611cf767276e768eba14e28e60c01b611fbc565b611d0b67239699c27199516860c01b611fbc565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050611dde6702a6b79d0d1ee06e60c01b611fbc565b611df26779f0a2c18706727960c01b611fbc565b6000816000015111611e6557611e1267d99d42c59f38821060c01b611fbc565b611e2667670a8ff01fa23c2860c01b611fbc565b82826040517f8790e63a000000000000000000000000000000000000000000000000000000008152600401611e5c9291906121e9565b60405180910390fd5b611e7967fbc76f60f5aadd8260c01b611fbc565b611e8d6754b4c6bfc707577560c01b611fbc565b611ea167cf5726c6dd85331c60c01b611fbc565b611eb5671c9a00e95ad6730060c01b611fbc565b611ec96709e3c96efb02ead660c01b611fbc565b88600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060000181905550611f35676f5c0280a0b4febf60c01b611fbc565b611f4967f67b534ff4c7bb7a60c01b611fbc565b898b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0af55bb2d5976cf0b636ba8903d1f3a441f6056ded6bc491dcfad6d2e0827e168c604051611fa79190612098565b60405180910390a45050505050505050505050565b50565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061201f82611ff4565b9050919050565b61202f81612014565b811461203a57600080fd5b50565b60008135905061204c81612026565b92915050565b60006020828403121561206857612067611fef565b5b60006120768482850161203d565b91505092915050565b6000819050919050565b6120928161207f565b82525050565b60006020820190506120ad6000830184612089565b92915050565b6120bc8161207f565b81146120c757600080fd5b50565b6000813590506120d9816120b3565b92915050565b600080604083850312156120f6576120f5611fef565b5b60006121048582860161203d565b9250506020612115858286016120ca565b9150509250929050565b6121288161207f565b82525050565b61213781612014565b82525050565b604082016000820151612153600085018261211f565b506020820151612166602085018261212e565b50505050565b6000604082019050612181600083018461213d565b92915050565b6000806000606084860312156121a05761219f611fef565b5b60006121ae8682870161203d565b93505060206121bf868287016120ca565b92505060406121d0868287016120ca565b9150509250925092565b6121e381612014565b82525050565b60006040820190506121fe60008301856121da565b61220b6020830184612089565b9392505050565b60008151905061222181612026565b92915050565b60006020828403121561223d5761223c611fef565b5b600061224b84828501612212565b91505092915050565b600081905092915050565b50565b600061226f600083612254565b915061227a8261225f565b600082019050919050565b600061229082612262565b9150819050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006122e1601f8361229a565b91506122ec826122ab565b602082019050919050565b60006020820190508181036000830152612310816122d4565b9050919050565b600060608201905061232c60008301866121da565b6123396020830185612089565b6123466040830184612089565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123888261207f565b91506123938361207f565b92508282019050808211156123ab576123aa61234e565b5b92915050565b60006060820190506123c660008301866121da565b6123d360208301856121da565b6123e06040830184612089565b94935050505056fea2646970667358221220d9657caa922bf87a8d1d9428d9769291d286c84cc47eb93a6366d2e3e8daf54f64736f6c63430008110033";

type NftMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplace__factory extends ContractFactory {
  constructor(...args: NftMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplace> {
    return super.deploy(overrides || {}) as Promise<NftMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NftMarketplace {
    return super.attach(address) as NftMarketplace;
  }
  override connect(signer: Signer): NftMarketplace__factory {
    return super.connect(signer) as NftMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceInterface {
    return new utils.Interface(_abi) as NftMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NftMarketplace;
  }
}
