/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  NftMarketplace,
  NftMarketplaceInterface,
} from "../../contracts/NftMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__AlreadyListed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__NftNotListed",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NoProceeds",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotApprovedForMarketplace",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__OwnerCannotBuyHisOwnNft",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__PriceMustBeAboveZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NftMarketplace__PriceNotMet",
    type: "error",
  },
  {
    inputs: [],
    name: "NftMarketplace__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemBough",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ItemList",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
    ],
    name: "ListingDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ListingUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "buyItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "cancelListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
        ],
        internalType: "struct NftMarketplace.Listing",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "getProceeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updateListing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawProceeds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600160008190555061241f806100286000396000f3fe6080604052600436106100705760003560e01c80639038e6931161004e5780639038e693146101185780639f37092a1461012f578063b2ddee061461014b578063f772adf11461017457610070565b806330cfeda91461007557806388700d1c146100b257806389bfd38f146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190612053565b61019d565b6040516100a99190612099565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d491906120e0565b610222565b6040516100e6919061216d565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190612188565b610329565b005b34801561012457600080fd5b5061012d610aa1565b005b610149600480360381019061014491906120e0565b610d4b565b005b34801561015757600080fd5b50610172600480360381019061016d91906120e0565b6115bb565b005b34801561018057600080fd5b5061019b60048036038101906101969190612188565b611acb565b005b60006101b3671eddcdcbff3adc8a60c01b611fbd565b6101c7678cfc7b1b6272710160c01b611fbd565b6101db675105f96bc0bac0bc60c01b611fbd565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61022a611fc0565b61023e6711d642809d5f3d8160c01b611fbd565b61025267c805264f2b5ff38a60c01b611fbd565b61026667fe1d111e67d5935060c01b611fbd565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b61033d6739eb76bfd1cd79de60c01b611fbd565b828261035367c2dd073b671de05f60c01b611fbd565b61036767b21ccdf09ca8367860c01b611fbd565b61037b67cab87d06f67aa57960c01b611fbd565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905061044e672ea297b0cdb48ac160c01b611fbd565b61046267c38511a11accbb5f60c01b611fbd565b6000816000015111156104d657610483674cefb7e46d0e91a460c01b611fbd565b610497676ef558526b31b17360c01b611fbd565b82826040517fc2f0d7090000000000000000000000000000000000000000000000000000000081526004016104cd9291906121ea565b60405180910390fd5b6104ea673f7570b001a0cdcf60c01b611fbd565b6104fe676a06f202b2ffb91260c01b611fbd565b610512674f49ac6eda97586560c01b611fbd565b61052667ea80f426825938bb60c01b611fbd565b85853361053d6731818c17fada6f2460c01b611fbd565b61055167d0f6ba574919537a60c01b611fbd565b61056567598efbe7ca11fc7760c01b611fbd565b600083905061057e6799b78babe48a7b9b60c01b611fbd565b61059267de69195092fdae8e60c01b611fbd565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016105cd9190612099565b602060405180830381865afa1580156105ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060e9190612228565b905061062467544e3d0c96d0250a60c01b611fbd565b610638676bd10987480341a160c01b611fbd565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106c55761067f6715d26385ba8b63c760c01b611fbd565b61069367bfca234252877d7260c01b611fbd565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d967bdec14ee0a9f99c060c01b611fbd565b6106ed67da38d3f7bf71417960c01b611fbd565b61070167c7ecbca36316164c60c01b611fbd565b61071567bec06c95bf77685060c01b611fbd565b6107296745cb04eb0f38cb1660c01b611fbd565b61073d673cd03403a556482060c01b611fbd565b6000891161079f5761075967af3eb1fabb22c02060c01b611fbd565b61076d67f046c60c5b9bf71960c01b611fbd565b6040517f096d7ecf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107b367f4f18cd3a826342460c01b611fbd565b6107c76776df54685154d97360c01b611fbd565b6107db67befe7a74f288b91d60c01b611fbd565b60008b90506107f46797174a3906efb19360c01b611fbd565b61080867344f09af9b26206460c01b611fbd565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc8d6040518263ffffffff1660e01b81526004016108589190612099565b602060405180830381865afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190612228565b73ffffffffffffffffffffffffffffffffffffffff161461090e576108c867e8971778fd31dba460c01b611fbd565b6108dc6766ce4759fb590bc460c01b611fbd565b6040517f13e7d28d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61092267902cbde2dadeaba960c01b611fbd565b610936677ab867a8002b029b60c01b611fbd565b60405180604001604052808b81526020013373ffffffffffffffffffffffffffffffffffffffff16815250600160008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008d81526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050610a19678f095498ed06c4bc60c01b611fbd565b610a2d6755302d8f8e5b248660c01b611fbd565b8a8c73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4356b9bb6d0b8c76c91c514b9dd79473640a142aaa02c6b4909963ccedef603c8d604051610a8b9190612099565b60405180910390a4505050505050505050505050565b610ab56728ff71b6d3bf564060c01b611fbd565b610ac9674a75a297a7e5f16b60c01b611fbd565b610add67e8dcfb712545d81f60c01b611fbd565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610b35673599ad0d8c09ab8460c01b611fbd565b610b4967c663cc84ee7a085e60c01b611fbd565b60008111610bab57610b6567c46b3d62d7a8919e60c01b611fbd565b610b7967d5ae9a48b1fb2bba60c01b611fbd565b6040517f668a7c4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbf67ecbc830e75f4d4b460c01b611fbd565b610bd3679093162481b1de7e60c01b611fbd565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c2c67d05d69e15756975560c01b611fbd565b610c4067889e95a13d3ff14360c01b611fbd565b60003373ffffffffffffffffffffffffffffffffffffffff1682604051610c6690612286565b60006040518083038185875af1925050503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b50509050610cc0674bfe771382c752a660c01b611fbd565b610cd467c0f929faca6b18b860c01b611fbd565b80610d3357610ced67c025ffe89eea91e360c01b611fbd565b610d0167d8bb888d2a31698660c01b611fbd565b6040517fa05884ba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d4767cfdca158ef62d3b260c01b611fbd565b5050565b610d5f67faf9f037e99c644760c01b611fbd565b600260005403610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b906122f8565b60405180910390fd5b6002600081905550610dc0679b9946dc4915401860c01b611fbd565b610dd4672a4cbdf54a2b340a60c01b611fbd565b8181610dea6743d69484b17df7c960c01b611fbd565b610dfe67276e768eba14e28e60c01b611fbd565b610e1267239699c27199516860c01b611fbd565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050610ee56702a6b79d0d1ee06e60c01b611fbd565b610ef96779f0a2c18706727960c01b611fbd565b6000816000015111610f6c57610f1967d99d42c59f38821060c01b611fbd565b610f2d67670a8ff01fa23c2860c01b611fbd565b82826040517f8790e63a000000000000000000000000000000000000000000000000000000008152600401610f639291906121ea565b60405180910390fd5b610f8067fbc76f60f5aadd8260c01b611fbd565b610f946754b4c6bfc707577560c01b611fbd565b610fa8672184ab70ceeb3ff160c01b611fbd565b610fbc674cbcc17a9b3dc72260c01b611fbd565b848433610fd367a5b190b466b0e11e60c01b611fbd565b610fe767318977c6f1513cb560c01b611fbd565b610ffb67c81c021113040a0c60c01b611fbd565b600083905061101467b0e10a2e7aec69c060c01b611fbd565b61102867c7e49fbef879482360c01b611fbd565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016110639190612099565b602060405180830381865afa158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190612228565b90506110ba67ad48058db1cf68fb60c01b611fbd565b6110ce675cfb0b6ff679537b60c01b611fbd565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361115b576111156703959ce5c6da3cc760c01b611fbd565b61112967ef17156674fce6be60c01b611fbd565b6040517f3bcf9f2f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61116f67143a44bf20e540d560c01b611fbd565b611183676f29758eed05d1a260c01b611fbd565b6111976741f7bc6e6785a3a160c01b611fbd565b6111ab676e6b1a5ca32ae9ee60c01b611fbd565b6111bf670b369c6709566d7e60c01b611fbd565b6111d3678df84c50837f4dd560c01b611fbd565b6000600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506112a667eb79017e030bd19160c01b611fbd565b6112ba6742d64fdf23fc53d860c01b611fbd565b8060000151341015611333576112da676da8f69da4a1477660c01b611fbd565b6112ee67686f1beaebe138c960c01b611fbd565b8a8a82600001516040517f817ce9f100000000000000000000000000000000000000000000000000000000815260040161132a93929190612318565b60405180910390fd5b6113476752d0d3bf4b09a46260c01b611fbd565b61135b67eccac909ce21a57160c01b611fbd565b3460026000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113ae919061237e565b925050819055506113c967d62f50c58dbab8e060c01b611fbd565b600160008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505061145f6735150dbcd6e7582b60c01b611fbd565b611473671e7da7881b5cc74360c01b611fbd565b60008b905061148c676a7997759e57291560c01b611fbd565b6114a067dfdfffd1ea19424f60c01b611fbd565b8073ffffffffffffffffffffffffffffffffffffffff166342842e0e8360200151338e6040518463ffffffff1660e01b81526004016114e1939291906123b2565b600060405180830381600087803b1580156114fb57600080fd5b505af115801561150f573d6000803e3d6000fd5b5050505061152767ed1a79ceac25320660c01b611fbd565b61153b67f6c9324a0358918060c01b611fbd565b8a8c73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fea2209283edb136d338541fa15a2c90e6790f34abe1976ec39603aafdd61bd30856000015160405161159d9190612099565b60405180910390a45050505050505050505060016000819055505050565b6115cf67f1b30bc57c2e281d60c01b611fbd565b81816115e56743d69484b17df7c960c01b611fbd565b6115f967276e768eba14e28e60c01b611fbd565b61160d67239699c27199516860c01b611fbd565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090506116e06702a6b79d0d1ee06e60c01b611fbd565b6116f46779f0a2c18706727960c01b611fbd565b60008160000151116117675761171467d99d42c59f38821060c01b611fbd565b61172867670a8ff01fa23c2860c01b611fbd565b82826040517f8790e63a00000000000000000000000000000000000000000000000000000000815260040161175e9291906121ea565b60405180910390fd5b61177b67fbc76f60f5aadd8260c01b611fbd565b61178f6754b4c6bfc707577560c01b611fbd565b6117a36730558f002339426360c01b611fbd565b6117b767e454c9b03c3ef01a60c01b611fbd565b8484336117ce6731818c17fada6f2460c01b611fbd565b6117e267d0f6ba574919537a60c01b611fbd565b6117f667598efbe7ca11fc7760c01b611fbd565b600083905061180f6799b78babe48a7b9b60c01b611fbd565b61182367de69195092fdae8e60c01b611fbd565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b815260040161185e9190612099565b602060405180830381865afa15801561187b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189f9190612228565b90506118b567544e3d0c96d0250a60c01b611fbd565b6118c9676bd10987480341a160c01b611fbd565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611956576119106715d26385ba8b63c760c01b611fbd565b61192467bfca234252877d7260c01b611fbd565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61196a67bdec14ee0a9f99c060c01b611fbd565b61197e67da38d3f7bf71417960c01b611fbd565b61199267032641153a104dcd60c01b611fbd565b6119a667f3593764d296dabd60c01b611fbd565b6119ba67cfc930c2c189cb5860c01b611fbd565b600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a81526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050611a5067ca0f75c3c4b9366d60c01b611fbd565b611a64672ee7a3c3cdf99f5f60c01b611fbd565b888a73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fdc1c98b735a2a3a63ffab19b8035d3c0e01c1dded5676b3ee21f08b6d2efca4760405160405180910390a450505050505050505050565b611adf675bf1bb2491c8083f60c01b611fbd565b828233611af66731818c17fada6f2460c01b611fbd565b611b0a67d0f6ba574919537a60c01b611fbd565b611b1e67598efbe7ca11fc7760c01b611fbd565b6000839050611b376799b78babe48a7b9b60c01b611fbd565b611b4b67de69195092fdae8e60c01b611fbd565b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b8152600401611b869190612099565b602060405180830381865afa158015611ba3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bc79190612228565b9050611bdd67544e3d0c96d0250a60c01b611fbd565b611bf1676bd10987480341a160c01b611fbd565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611c7e57611c386715d26385ba8b63c760c01b611fbd565b611c4c67bfca234252877d7260c01b611fbd565b6040517f94953b6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611c9267bdec14ee0a9f99c060c01b611fbd565b611ca667da38d3f7bf71417960c01b611fbd565b611cba678288ad65805a6dde60c01b611fbd565b611cce67bbf115ec1860616260c01b611fbd565b8787611ce46743d69484b17df7c960c01b611fbd565b611cf867276e768eba14e28e60c01b611fbd565b611d0c67239699c27199516860c01b611fbd565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050611ddf6702a6b79d0d1ee06e60c01b611fbd565b611df36779f0a2c18706727960c01b611fbd565b6000816000015111611e6657611e1367d99d42c59f38821060c01b611fbd565b611e2767670a8ff01fa23c2860c01b611fbd565b82826040517f8790e63a000000000000000000000000000000000000000000000000000000008152600401611e5d9291906121ea565b60405180910390fd5b611e7a67fbc76f60f5aadd8260c01b611fbd565b611e8e6754b4c6bfc707577560c01b611fbd565b611ea267cf5726c6dd85331c60c01b611fbd565b611eb6671c9a00e95ad6730060c01b611fbd565b611eca6709e3c96efb02ead660c01b611fbd565b88600160008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008c815260200190815260200160002060000181905550611f36676f5c0280a0b4febf60c01b611fbd565b611f4a67f67b534ff4c7bb7a60c01b611fbd565b898b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f0af55bb2d5976cf0b636ba8903d1f3a441f6056ded6bc491dcfad6d2e0827e168c604051611fa89190612099565b60405180910390a45050505050505050505050565b50565b604051806040016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061202082611ff5565b9050919050565b61203081612015565b811461203b57600080fd5b50565b60008135905061204d81612027565b92915050565b60006020828403121561206957612068611ff0565b5b60006120778482850161203e565b91505092915050565b6000819050919050565b61209381612080565b82525050565b60006020820190506120ae600083018461208a565b92915050565b6120bd81612080565b81146120c857600080fd5b50565b6000813590506120da816120b4565b92915050565b600080604083850312156120f7576120f6611ff0565b5b60006121058582860161203e565b9250506020612116858286016120cb565b9150509250929050565b61212981612080565b82525050565b61213881612015565b82525050565b6040820160008201516121546000850182612120565b506020820151612167602085018261212f565b50505050565b6000604082019050612182600083018461213e565b92915050565b6000806000606084860312156121a1576121a0611ff0565b5b60006121af8682870161203e565b93505060206121c0868287016120cb565b92505060406121d1868287016120cb565b9150509250925092565b6121e481612015565b82525050565b60006040820190506121ff60008301856121db565b61220c602083018461208a565b9392505050565b60008151905061222281612027565b92915050565b60006020828403121561223e5761223d611ff0565b5b600061224c84828501612213565b91505092915050565b600081905092915050565b50565b6000612270600083612255565b915061227b82612260565b600082019050919050565b600061229182612263565b9150819050919050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006122e2601f8361229b565b91506122ed826122ac565b602082019050919050565b60006020820190508181036000830152612311816122d5565b9050919050565b600060608201905061232d60008301866121db565b61233a602083018561208a565b612347604083018461208a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061238982612080565b915061239483612080565b92508282019050808211156123ac576123ab61234f565b5b92915050565b60006060820190506123c760008301866121db565b6123d460208301856121db565b6123e1604083018461208a565b94935050505056fea2646970667358221220c61686d0cc42a7a89e7b74db9cd228decf3b0b6d23c5f1bfc04fe5da741ba8b664736f6c63430008110033";

type NftMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplace__factory extends ContractFactory {
  constructor(...args: NftMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NftMarketplace> {
    return super.deploy(overrides || {}) as Promise<NftMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NftMarketplace {
    return super.attach(address) as NftMarketplace;
  }
  override connect(signer: Signer): NftMarketplace__factory {
    return super.connect(signer) as NftMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceInterface {
    return new utils.Interface(_abi) as NftMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NftMarketplace;
  }
}
